"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const P=require("fs"),w=require("path");class I{constructor(){this.supportedExtensions=[".js",".jsx",".ts",".tsx",".vue",".html"],this.extractedTexts=[]}isNonTextualContent(t){const{text:s,isAttribute:n=!1,isJS:r=!1}=t;return[/^&[a-zA-Z]+;$/,/^https?:\/\//,/^\/[\/\w-]+$/,/^[0-9\s\-\+\(\)]+$/,/^[A-Z_]{5,}$/,/^\s*$/,/^[\w-]+\.(js|css|png|jpg|gif|svg)$/i,/^[a-z]+([A-Z][a-z]*)*$/,/^[a-z]+-[a-z-]+$/,/^[a-z]+_[a-z_]+$/i,/api\..*\.com/i,/^(ok|yes|no|true|false)$/i,/^\w{1,2}$/,/^\\[nrtbfv\\'"0]$/,/^[\\\/\*\{\}\[\]()<>;,.:!?'"=+\-~^&|%$#@]+$/,/^\/\*$/,/^\*\/$/,/^\/\/$/,/^[{}[\]()<>]$/,/^[;,.:!?'"]+$/,/^[+\-*/%=&|^~<>]+$/,/^\$\{/,/^.*\}$/,/^.*content\s*\+=/,/^;\s*$/,/^['"]\([^'"]*$/,/^\][^'"]*['"]*$/,/^[^'"]*\)['"]*$/,/^:\s*\n\s*case\s*$/,/^,\s*\n\s*$/,...r?[/^[A-Z][A-Z0-9_]{4,}$/]:[],/^[a-z]+[A-Z][a-z]*[A-Z][a-z]*$/,/^[a-z]+-[a-z]+-[a-z-]+$/,/^(src|alt|id|css|js|php|html|xml|json)$/i,...n?[]:[/^[a-zA-Z]*-[a-zA-Z-]*$/],/^[A-Z]+_[A-Z0-9_]+$/,/^[a-z]+([A-Z][a-z]*)+$/,/^\/.*\/[gimsuyx]*$/].some(i=>i.test(s.trim()))}getFileExtension(t){const s=t.split(".");return s.length>1?s[s.length-1].toLowerCase():""}parseFile(t){const s=w.extname(t).toLowerCase(),n=w.basename(t);try{const r=P.readFileSync(t,"utf8");return this.parseContent(r,s,{filePath:t,fileName:n})}catch(r){return console.error(`Error reading file ${t}:`,r.message),null}}parseContent(t,s,n){if(!this.supportedExtensions.includes(s))return console.warn(`Unsupported file type: ${s}`),null;t=this.escapeRegExp(t);const r=this.extractTextByType(t,s);return{...n||{},extension:s,extractedText:r,timestamp:new Date().toISOString()}}extractTextByType(t,s){const n={strings:[],htmlText:[],attributes:[],templateText:[],classNames:[],ids:[]};switch(s){case".js":case".ts":return this.parseJavaScriptTypeFiles(t);case".jsx":case".tsx":return this.parseJSXFile(t);case".vue":return this.parseVueFile(t);case".html":return this.parseHtmlFile(t);default:return n}}parseJavaScriptTypeFiles(t){const s={strings:[]},n=this.extractMeaningfulStringsWithPosition(t,"javascript");return s.strings.push(...n),s}parseJSXFile(t){const s={strings:[],classNames:[],ids:[]},n=/return\s*\(\s*([\s\S]*?)\s*\);/g,r=[...t.matchAll(n)],e=[];r.forEach(c=>{const g=c[1],a=c.index+c[0].indexOf(c[1]),o=a+g.length;e.push({start:a,end:o});const l=this.parseHtmlContent(g,!0,a,t,"html");s.strings.push(...l.htmlText),s.strings.push(...l.naturalLanguageAttributes)});const i=this.extractJavaScriptStringsExcludingJSX(t,e,"javascript");return s.strings.push(...i),s}extractJavaScriptStringsExcludingJSX(t,s,n="javascript"){const r=[];[/"(?:[^"\\]|\\.)*"/g,/'(?:[^'\\]|\\.)*'/g,/`(?:[^`\\]|\\.)*`/g].forEach(g=>{let a;for(;(a=g.exec(t))!==null;){const o=a.index,l=a.index+a[0].length;s.some(x=>o>=x.start&&l<=x.end)||r.push(a)}});const i=[],c=[/require\s*\(/,/import\s+.*\s+from\s+/,/export\s+.*\s+from\s+/];return r.forEach(g=>{const a=g[0],o=g.index,l=Math.max(0,o-100),u=t.substring(l,o+a.length+50);let x=c.some(d=>d.test(u));if(!x){const d=a.slice(1,-1),p=this.isInsideFunctionCall(t,o),h=t.substring(Math.max(0,o-200),o),f=/console\.(log|error|warn|info|debug|trace)\s*\(\s*['"`]*$/.test(h),S=[/^[\[\](){}.*+?^$\\|]+$/,/^\[.*\]$/,/^\(.*\)$/,/^\\[a-z]$/,/\[\^[^[\]]*\]/,/\$\{|\}\$/].some(C=>C.test(d)),b=/\$t\(|\\.t\(|i18n\\.t\(/.test(d),F=/\bt\s*\(/.test(d),E=d.length<=2,T=/^[^a-zA-Z0-9\s\u00C0-\u017F\u0100-\u024F\u1E00-\u1EFF\u0400-\u04FF\u0370-\u03FF\u0590-\u05FF\u0600-\u06FF\u4E00-\u9FFF\u3040-\u309F\u30A0-\u30FF\uAC00-\uD7AF]+$/.test(d);x=S||b||F||E||T||p||f}if(!x){const d=a.slice(1,-1);if(d.trim().length>2&&!this.isNonTextualContent({text:d})){const p=this.getPositionInfo(t,o,o+a.length),h=o+1,f=o+a.length-1,m=this.getPositionInfo(t,h,f);i.push({text:d.replace(/\n/,"").trim(),type:"string",context:n,lineNumber:m.lineNumber,startPosition:m.columnStart,endPosition:m.columnEnd,columnStart:m.columnStart,columnEnd:m.columnEnd,absoluteStart:m.absoluteStart,absoluteEnd:m.absoluteEnd,originalStartPosition:p.columnStart,originalEndPosition:p.columnEnd,originalAbsoluteStart:p.absoluteStart,originalAbsoluteEnd:p.absoluteEnd,originalMatch:a})}}}),i}escapeRegExp(t){let s=t.replace(/^https?:\/\//gm,l=>" ".repeat(l.length));s=s.replace(/<[^>]*>/gm,l=>" ".repeat(l.length));let n;const r=/(\/\*([\s\S]*?)\*\/|[^\\]\/\/.+)/g;for(;(n=r.exec(s))!==null;){const l=n[0];for(const u of l.split(`
`))s=s.replace(u,"".padStart(u.length," "))}const e=/(\/(.*)\/+([gimuy]*))/gm;let i,c=-1,g=-1;for(;(i=e.exec(s))!==null;){c===-1&&(c=i.index);const l=i[0].replace(/^(!|=)\s{1,}?/,"").trim();try{const u=l.match(/^\/(.*)\/([gimuy]*)$/);if(u){const x=u[1],d=u[2];new RegExp(x,d),s=s.replace(l,`"${"".padStart(l.length-2,"*")}"`),g=i.index+l.length}}catch{continue}}const a=s.slice(c,g),o=t.slice(c,g);return t=t.replace(o,a),t}extractMeaningfulStringsWithPosition(t,s="javascript"){const n=[],r=[],e=/"(?:[^"\\]|\\.)*"/g;let i;for(;(i=e.exec(t))!==null;)r.push(i);const c=/'(?:[^'\\]|\\.)*'/g;for(;(i=c.exec(t))!==null;)r.push(i);const g=/`(?:[^`\\]|\\.|[\r\n])*`/g;for(;(i=g.exec(t))!==null;){const o=t.substring(Math.max(0,i.index-100),i.index),l=t.substring(i.index+i[0].length,i.index+i[0].length+20);/\[[^\]]*$/.test(o)&&/^[^\]]*\]/.test(l)||r.push(i)}const a=[/require\s*\(/,/import\s+.*\s+from\s+/,/export\s+.*\s+from\s+/];return r.forEach(o=>{const l=o[0],u=o.index,x=Math.max(0,u-100),d=t.substring(x,u+l.length+50);let p=a.some(h=>h.test(d));if(!p){const h=l.slice(1,-1),f=this.isInsideFunctionCall(t,u),m=t.substring(Math.max(0,u-200),u),S=/console\.(log|error|warn|info|debug|trace)\s*\(\s*['"`]*$/.test(m),F=[/^[\[\](){}.*+?^$\\|]+$/,/^\[.*\]$/,/^\(.*\)$/,/^\\[a-z]$/,/\[\^[^[\]]*\]/,/\$\{|\}\$/].some(y=>y.test(h)),E=/\$t\(|\\.t\(|i18n\\.t\(/.test(h),T=/\bt\s*\(/.test(h),C=h.length<=2,M=/^[^a-zA-Z0-9\s\u00C0-\u017F\u0100-\u024F\u1E00-\u1EFF\u0400-\u04FF\u0370-\u03FF\u0590-\u05FF\u0600-\u06FF\u4E00-\u9FFF\u3040-\u309F\u30A0-\u30FF\uAC00-\uD7AF]+$/.test(h);p=F||E||T||C||M||f||S}if(!p){const h=l.slice(1,-1);if(h.trim().length>2&&!this.isNonTextualContent({text:h})){const f=this.getPositionInfo(t,u,u+l.length),m=u+1,S=u+l.length-1,b=this.getPositionInfo(t,m,S);n.push({text:h.replace(/\n/,"").trim(),type:"string",context:s,lineNumber:b.lineNumber,startPosition:b.columnStart,endPosition:b.columnEnd,columnStart:b.columnStart,columnEnd:b.columnEnd,absoluteStart:b.absoluteStart,absoluteEnd:b.absoluteEnd,originalStartPosition:f.columnStart,originalEndPosition:f.columnEnd,originalAbsoluteStart:f.absoluteStart,originalAbsoluteEnd:f.absoluteEnd,originalMatch:l})}}}),n}isHtmlAttributeValue(t,s){const n=Math.max(0,s-200),r=Math.min(t.length,s+200),e=t.substring(n,r),i=s-n,c=e.substring(0,i),g=e.substring(i+1),a=c.lastIndexOf("=");if(a===-1)return!1;const l=c.substring(0,a).trim().match(/([\w-]+)\s*$/);if(!l)return!1;const u=l[1].toLowerCase(),x=t[s];return g.indexOf(x)===-1?!1:/<[^>]*>/.test(e)&&(/^(class|classname|id|style|src|href|type|name|role|aria-\w+|data-\w+|key|ref|onclick|onchange|value|checked|disabled|readonly|placeholder|title|alt)$/i.test(u)||/^on[A-Z]/.test(u)||/^(v-|:)/.test(u)||u.includes("-")||u.toLowerCase().startsWith("data"))}isInsideFunctionCall(t,s){const n=t.substring(Math.max(0,s-200),s);if(/console\.(log|error|warn|info|debug|trace)\s*\(\s*['"`]*$/.test(n))return!0;const e=Math.max(0,s-300),i=t.substring(e,s),c=[];for(let g=i.length-1;g>=0;g--)if(i[g]==="("){const a=i.substring(0,g).trim();/(\w+(\.\w+)*|\]\s*)$/.test(a)&&!/\b(if|for|while|switch|catch|with)\s*$/.test(a)&&c.push(e+g)}for(const g of c){let a=1,o=null;for(let l=g+1;l<t.length&&a>0;l++)if(t[l]==="(")a++;else if(t[l]===")"&&(a--,a===0)){o=l;break}if(o&&s>g&&s<o){const l=t.substring(g+1,o),u=l.includes("{")&&l.includes("}"),x=l.includes("[")&&l.includes("]");return!(u||x)}}return!1}extractMeaningfulStrings(t){return this.extractMeaningfulStringsWithPosition(t,"html").map(s=>s.text)}parseVueFile(t){const s={htmlText:[],naturalLanguageAttributes:[],strings:[]},n=t.match(/<template[^>]*>([\s\S]*?)<\/template>/i);if(n){const e=n[1],i=t.indexOf(n[0])+n[0].indexOf(e),c=this.parseHtmlContent(e,!1,0,void 0,"vue");c.htmlText.forEach(g=>{g.absoluteStart+=i,g.absoluteEnd+=i,s.htmlText.push(g)}),c.naturalLanguageAttributes.forEach(g=>{g.absoluteStart+=i,g.absoluteEnd+=i,s.naturalLanguageAttributes.push(g)})}const r=t.match(/<script[^>]*>([\s\S]*?)<\/script>/i);if(r){const e=r[1],c=t.indexOf(r[0])+r[0].indexOf(e);this.parseJavaScriptTypeFiles(e).strings.forEach(a=>{const o=this.getPositionInfo(t,a.absoluteStart+c,a.absoluteEnd+c);a.lineNumber=o.lineNumber,a.startPosition=o.startPosition,a.endPosition=o.endPosition,a.absoluteStart+=c,a.absoluteEnd+=c,s.strings.push(a)})}return s}parseHtmlFile(t){const s={htmlText:[],naturalLanguageAttributes:[],strings:[]},n=this.parseHtmlContent(t,!1,0,void 0,"html");s.htmlText.push(...n.htmlText),s.naturalLanguageAttributes.push(...n.naturalLanguageAttributes);const r=t.matchAll(/<script[^>]*>([\s\S]*?)<\/script>/gi);for(const e of r){const i=e[1],g=t.indexOf(e[0])+e[0].indexOf(i);this.extractMeaningfulStringsWithPosition(i,"javascript").forEach(o=>{const l=this.getPositionInfo(t,o.absoluteStart+g,o.absoluteEnd+g);o.lineNumber=l.lineNumber,o.startPosition=l.startPosition,o.endPosition=l.endPosition,o.columnStart=l.columnStart,o.columnEnd=l.columnEnd,o.absoluteStart+=g,o.absoluteEnd+=g,s.strings.push(o)})}return s}parseHtmlContent(t,s=!1,n=0,r,e="html"){const i={htmlText:[],naturalLanguageAttributes:[]},c=["placeholder","title","alt","aria-label","label","value","aria-description","aria-labelledby","data-tooltip","data-title","data-description","data-placeholder","data-label"];return t.replace(/<script[\s\S]*?<\/script>/gi,"").replace(/<style[\s\S]*?<\/style>/gi,""),[...t.matchAll(/>([^<]*?)</gs)].forEach(a=>{let o=a[1].trim().replace(/\s+/g," ").replace(/\n/g," ");if(o&&o.length>0&&!this.isNonTextualContent({text:o})){const l=a.index,u=t.substring(0,l+1),x=(u.match(/<script\b[^>]*>/gi)||[]).length,d=(u.match(/<\/script>/gi)||[]).length,p=(u.match(/<style\b[^>]*>/gi)||[]).length,h=(u.match(/<\/style>/gi)||[]).length,f=x>d,m=p>h;if(!f&&!m){const S=s&&(o.includes("{")||o.includes("}")),b=o.includes("{{")&&o.includes("}}"),F=o.includes(":")&&/:\w+\s*=/.test(o),E=/\w+\([^)]*\)/.test(o)||/\w+\.\w+/.test(o)||/\w+:\s*['"]/.test(o)||o.includes("=>")||o.includes("function")||/\$t\(/.test(o);if(!S&&!b&&!F&&!E){const T=r||t,C=a.index+n,M=a.index+a[0].length+n,y=this.getPositionInfo(T,C,M),$=a[1],j=$.trim(),N=a.index+1+$.indexOf(j)+n,v=T.substring(0,N).split(`
`),R=v.length,L=v[v.length-1].length,z=j.length,O=L+z,A={lineNumber:R,columnStart:L,columnEnd:O,absoluteStart:N,absoluteEnd:N+z};i.htmlText.push({text:o.replace(/\n/,"").trim(),type:"htmlText",context:e,lineNumber:A.lineNumber,startPosition:A.columnStart,endPosition:A.columnEnd,columnStart:A.columnStart,columnEnd:A.columnEnd,absoluteStart:A.absoluteStart,absoluteEnd:A.absoluteEnd,originalStartPosition:y.columnStart,originalEndPosition:y.columnEnd,originalAbsoluteStart:y.absoluteStart,originalAbsoluteEnd:y.absoluteEnd,originalMatch:a[0]})}}}}),c.forEach(a=>{const o=new RegExp(`(:|^|\\s)(${a})\\s*=\\s*["']([^"']+)["']`,"gi");[...t.matchAll(o)].forEach(u=>{const x=u[1],d=u[2],p=u[3].trim(),h=u[0];u.index;const f=x===":",m=s&&(p.includes("{")||p.includes("}"));if(!f&&!m&&p&&p.length>0&&!this.isNonTextualContent({text:p,isAttribute:!0})){const S=r||t,b=u.index+n,F=u.index+h.length+n,E=this.getPositionInfo(S,b,F),T=h.indexOf('"')+1,C=h.lastIndexOf('"'),M=u.index+T+n,y=u.index+C+n,$=this.getPositionInfo(S,M,y);i.naturalLanguageAttributes.push({text:p.replace(/\n/,"").trim(),type:"attribute",context:e,attribute:d,lineNumber:$.lineNumber,startPosition:$.columnStart,endPosition:$.columnEnd,columnStart:$.columnStart,columnEnd:$.columnEnd,absoluteStart:$.absoluteStart,absoluteEnd:$.absoluteEnd,originalStartPosition:E.columnStart,originalEndPosition:E.columnEnd,originalAbsoluteStart:E.absoluteStart,originalAbsoluteEnd:E.absoluteEnd,originalMatch:h})}})}),i}getPositionInfo(t,s,n){const e=t.substring(0,s).split(`
`),i=e.length,c=e[e.length-1].length,g=n-s,a=c+g;return{lineNumber:i,startPosition:c,endPosition:a,columnStart:c,columnEnd:a,absoluteStart:s,absoluteEnd:n}}parseDirectory(t){const s=[];try{const n=P.readdirSync(t);for(const r of n){const e=w.join(t,r),i=P.statSync(e);if(i.isDirectory())["node_modules",".git",".next","dist","build",".vscode"].includes(r)||s.push(...this.parseDirectory(e));else if(i.isFile()){const c=this.parseFile(e);c&&s.push(c)}}}catch(n){console.error(`Error reading directory ${t}:`,n.message)}return s.filter(Boolean)}filterMeaningfulText(t){return t.filter(s=>!s||typeof s!="string"||s.trim().length===0||s.trim().length<2?!1:![/^[0-9]+$/,/^[^a-zA-Z]*$/,/^(true|false|null|undefined)$/i,/^(div|span|p|h[1-6]|img|a|li|ul|ol)$/i,/^[\s\n\r\t]+$/].some(r=>r.test(s.trim()))).map(s=>s.trim())}generateSummary(t){const s={totalFiles:t.length,fileTypes:{},totalTexts:0,textTypes:{htmlText:0,naturalLanguageAttributes:0,strings:0},allTexts:[]};return t.forEach(n=>{const r=n.extension;s.fileTypes[r]=(s.fileTypes[r]||0)+1,Object.keys(n.extractedText).forEach(e=>{const i=n.extractedText[e];Array.isArray(i)&&(s.textTypes[e]=(s.textTypes[e]||0)+i.length,s.totalTexts+=i.length,i.forEach(c=>{typeof c=="object"&&c.text&&s.allTexts.push({...c,file:n.fileName,filePath:n.filePath})}))})}),s.allTexts.sort((n,r)=>(n?.lineNumber??0)!==(r?.lineNumber??0)?(n?.lineNumber??0)-(r?.lineNumber??0):(n?.startPosition??0)-(r?.startPosition??0)),s}exportToJson(t,s){const n=this.generateSummary(t),r={metadata:{timestamp:new Date().toISOString(),totalFiles:t.length,supportedExtensions:this.supportedExtensions},summary:n,detailedResults:t};try{const e=w.dirname(s);P.existsSync(e)||(P.mkdirSync(e,{recursive:!0}),console.log(`Created directory: ${e}`)),P.writeFileSync(s,JSON.stringify(r,null,2),"utf8"),console.log(`Results exported to: ${s}`)}catch(e){console.error(`Error writing to file: ${e.message}`)}}exportToText(t,s){const n=this.generateSummary(t);let r=`Document Parser Results
`;r+=`======================

`,r+=`Total Files Processed: ${n.totalFiles}
`,r+=`Total Meaningful Texts Found: ${n.totalTexts}

`,r+=`File Types:
`,Object.keys(n.fileTypes).forEach(e=>{r+=`  ${e}: ${n.fileTypes[e]} files
`}),r+=`
Text Types:
`,Object.keys(n.textTypes).forEach(e=>{r+=`  ${e}: ${n.textTypes[e]} items
`}),r+=`

All Meaningful Texts with Position Info:
`,r+=`========================================

`,n.allTexts.forEach((e,i)=>{let c=`${i+1}. [${e.type}] ${e.file}`;e.lineNumber&&(c+=` (Line: ${e.lineNumber}, Pos: ${e.startPosition}-${e.endPosition})`),e.attribute&&(c+=` [${e.attribute}]`),c+=`: "${e.text}"`,e.originalMatch&&e.originalMatch!==e.text&&(c+=` | Original: ${e.originalMatch}`),r+=c+`
`});try{const e=w.dirname(s);P.existsSync(e)||(P.mkdirSync(e,{recursive:!0}),console.log(`Created directory: ${e}`)),P.writeFileSync(s,r,"utf8"),console.log(`Text results exported to: ${s}`)}catch(e){console.error(`Error writing to file: ${e.message}`)}}}exports.DocumentParser=I;exports.default=I;
