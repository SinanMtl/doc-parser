import P from"fs";import M from"path";class D{constructor(){this.supportedExtensions=[".js",".jsx",".ts",".tsx",".vue",".html"],this.extractedTexts=[]}isNonTextualContent(t){const{text:e,isAttribute:s=!1,isJS:n=!1}=t;return[/^&[a-zA-Z]+;$/,/^https?:\/\//,/^\/[\/\w-]+$/,/^[0-9\s\-\+\(\)]+$/,/^[A-Z_]{5,}$/,/^\s*$/,/^[\w-]+\.(js|css|png|jpg|gif|svg)$/i,/^[a-z]+([A-Z][a-z]*)+$/,/^[a-z]+-[a-z-]+$/,/^[a-z]+_[a-z_]+$/i,/api\..*\.com/i,/^(ok|yes|no|true|false)$/i,/^\w{1,2}$/,/^\\[nrtbfv\\'"0]$/,/^[\\\/\*\{\}\[\]()<>;,.:!?'"=+\-~^&|%$#@]+$/,/^\/\*$/,/^\*\/$/,/^\/\/$/,/^[{}[\]()<>]$/,/^[;,.:!?'"]+$/,/^[+\-*/%=&|^~<>]+$/,/^\$\{/,/^.*\}$/,/^.*content\s*\+=/,/^;\s*$/,/^['"]\([^'"]*$/,/^\][^'"]*['"]*$/,/^[^'"]*\)['"]*$/,/^:\s*\n\s*case\s*$/,/^,\s*\n\s*$/,...n?[/^[A-Z][A-Z0-9_]{4,}$/]:[],/^[a-z]+[A-Z][a-z]*[A-Z][a-z]*$/,/^[a-z]+-[a-z]+-[a-z-]+$/,/^(src|alt|id|css|js|php|html|xml|json)$/i,...s?[]:[/^[a-zA-Z]*-[a-zA-Z-]*$/],/^[A-Z]+_[A-Z0-9_]+$/,/^\/.*\/[gimsuyx]*$/].some(t=>t.test(e.trim()))}getFileExtension(t){const e=t.split(".");return e.length>1?e[e.length-1].toLowerCase():""}parseFile(t){const e=M.extname(t).toLowerCase(),s=M.basename(t);try{const n=P.readFileSync(t,"utf8");return this.parseContent(n,e,{filePath:t,fileName:s})}catch(e){return console.error(`Error reading file ${t}:`,e.message),null}}parseContent(t,e,s){return this.supportedExtensions.includes(e)?(t=this.escapeRegExp(t),{...s||{},extension:e,extractedText:this.extractTextByType(t,e),timestamp:(new Date).toISOString()}):(console.warn(`Unsupported file type: ${e}`),null)}extractTextByType(t,e){const s={strings:[],htmlText:[],attributes:[],templateText:[],classNames:[],ids:[]};switch(e){case".js":case".ts":return this.parseJavaScriptTypeFiles(t);case".jsx":case".tsx":return this.parseJSXFile(t);case".vue":return this.parseVueFile(t);case".html":return this.parseHtmlFile(t);default:return s}}parseJavaScriptTypeFiles(t){const e={strings:[]},s=this.extractMeaningfulStringsWithPosition(t,"javascript");return e.strings.push(...s),e}parseJSXFile(t){const e={strings:[],classNames:[],ids:[]},s=[...t.matchAll(/return\s*\(\s*([\s\S]*?)\s*\);/g)],n=[];s.forEach(s=>{const i=s[1],r=s.index+s[0].indexOf(s[1]),o=r+i.length;n.push({start:r,end:o});const a=this.parseHtmlContent(i,!0,r,t,"html");e.strings.push(...a.htmlText),e.strings.push(...a.naturalLanguageAttributes)});const i=this.extractJavaScriptStringsExcludingJSX(t,n,"javascript");return e.strings.push(...i),e}extractJavaScriptStringsExcludingJSX(t,e,s="javascript"){const n=[];[/"(?:[^"\\]|\\.)*"/g,/'(?:[^'\\]|\\.)*'/g,/`(?:[^`\\]|\\.)*`/g].forEach(s=>{let i;for(;null!==(i=s.exec(t));){const t=i.index,s=i.index+i[0].length;e.some(e=>t>=e.start&&s<=e.end)||n.push(i)}});const i=[],r=[/require\s*\(/,/import\s+.*\s+from\s+/,/export\s+.*\s+from\s+/];return n.forEach(e=>{const n=e[0],o=e.index,a=Math.max(0,o-100),l=t.substring(a,o+n.length+50);let u=r.some(t=>t.test(l));if(!u){const e=n.slice(1,-1),s=this.isInsideFunctionCall(t,o),i=t.substring(Math.max(0,o-200),o),r=/console\.(log|error|warn|info|debug|trace)\s*\(\s*['"`]*$/.test(i),a=[/^[\[\](){}.*+?^$\\|]+$/,/^\[.*\]$/,/^\(.*\)$/,/^\\[a-z]$/,/\[\^[^[\]]*\]/,/\$\{|\}\$/].some(t=>t.test(e)),l=/\$t\(|\\.t\(|i18n\\.t\(/.test(e),c=/\bt\s*\(/.test(e),g=e.length<=2,h=/^[^a-zA-Z0-9\s\u00C0-\u017F\u0100-\u024F\u1E00-\u1EFF\u0400-\u04FF\u0370-\u03FF\u0590-\u05FF\u0600-\u06FF\u4E00-\u9FFF\u3040-\u309F\u30A0-\u30FF\uAC00-\uD7AF]+$/.test(e);u=a||l||c||g||h||s||r}if(!u){const e=n.slice(1,-1);if(e.trim().length>2&&!this.isNonTextualContent({text:e})){const r=this.getPositionInfo(t,o,o+n.length),a=o+1,l=o+n.length-1,u=this.getPositionInfo(t,a,l);i.push({text:e.replace(/\n/,"").trim(),type:"string",context:s,lineNumber:u.lineNumber,startPosition:u.columnStart,endPosition:u.columnEnd,columnStart:u.columnStart,columnEnd:u.columnEnd,absoluteStart:u.absoluteStart,absoluteEnd:u.absoluteEnd,originalStartPosition:r.columnStart,originalEndPosition:r.columnEnd,originalAbsoluteStart:r.absoluteStart,originalAbsoluteEnd:r.absoluteEnd,originalMatch:n})}}}),i}escapeRegExp(t){let e,s=t.replace(/^https?:\/\//gm,t=>" ".repeat(t.length));s=s.replace(/<[^>]*>/gm,t=>" ".repeat(t.length));const n=/(\/\*([\s\S]*?)\*\/|[^\\]\/\/.+)/g;for(;null!==(e=n.exec(s));){const t=e[0];for(const e of t.split("\n"))s=s.replace(e,"".padStart(e.length," "))}const i=/(\/(.*)\/+([gimuy]*))/gm;let r,o=-1,a=-1;for(;null!==(r=i.exec(s));){-1===o&&(o=r.index);const t=r[0].replace(/^(!|=)\s{1,}?/,"").trim();try{const e=t.match(/^\/(.*)\/([gimuy]*)$/);if(e){const n=e[1],i=e[2];new RegExp(n,i),s=s.replace(t,`"${"".padStart(t.length-2,"*")}"`),a=r.index+t.length}}catch{continue}}const l=s.slice(o,a),u=t.slice(o,a);return t.replace(u,l)}extractMeaningfulStringsWithPosition(t,e="javascript"){const s=[],n=[],i=/"(?:[^"\\]|\\.)*"/g;let r;for(;null!==(r=i.exec(t));)n.push(r);const o=/'(?:[^'\\]|\\.)*'/g;for(;null!==(r=o.exec(t));)n.push(r);const a=/`(?:[^`\\]|\\.|[\r\n])*`/g;for(;null!==(r=a.exec(t));){const e=t.substring(Math.max(0,r.index-100),r.index),s=t.substring(r.index+r[0].length,r.index+r[0].length+20);/\[[^\]]*$/.test(e)&&/^[^\]]*\]/.test(s)||n.push(r)}const l=[/require\s*\(/,/import\s+.*\s+from\s+/,/export\s+.*\s+from\s+/];return n.forEach(n=>{const i=n[0],r=n.index,o=Math.max(0,r-100),a=t.substring(o,r+i.length+50);let u=l.some(t=>t.test(a));if(!u){const e=i.slice(1,-1),s=this.isInsideFunctionCall(t,r),n=t.substring(Math.max(0,r-200),r),o=/console\.(log|error|warn|info|debug|trace)\s*\(\s*['"`]*$/.test(n),a=[/^[\[\](){}.*+?^$\\|]+$/,/^\[.*\]$/,/^\(.*\)$/,/^\\[a-z]$/,/\[\^[^[\]]*\]/,/\$\{|\}\$/].some(t=>t.test(e)),l=/\$t\(|\\.t\(|i18n\\.t\(/.test(e),c=/\bt\s*\(/.test(e),g=e.length<=2,h=/^[^a-zA-Z0-9\s\u00C0-\u017F\u0100-\u024F\u1E00-\u1EFF\u0400-\u04FF\u0370-\u03FF\u0590-\u05FF\u0600-\u06FF\u4E00-\u9FFF\u3040-\u309F\u30A0-\u30FF\uAC00-\uD7AF]+$/.test(e);u=a||l||c||g||h||s||o}if(!u){const n=i.slice(1,-1);if(n.trim().length>2&&!this.isNonTextualContent({text:n})){const o=this.getPositionInfo(t,r,r+i.length),a=r+1,l=r+i.length-1,u=this.getPositionInfo(t,a,l);s.push({text:n.replace(/\n/,"").trim(),type:"string",context:e,lineNumber:u.lineNumber,startPosition:u.columnStart,endPosition:u.columnEnd,columnStart:u.columnStart,columnEnd:u.columnEnd,absoluteStart:u.absoluteStart,absoluteEnd:u.absoluteEnd,originalStartPosition:o.columnStart,originalEndPosition:o.columnEnd,originalAbsoluteStart:o.absoluteStart,originalAbsoluteEnd:o.absoluteEnd,originalMatch:i})}}}),s}isHtmlAttributeValue(t,e){const s=Math.max(0,e-200),n=Math.min(t.length,e+200),i=t.substring(s,n),r=e-s,o=i.substring(0,r),a=i.substring(r+1),l=o.lastIndexOf("=");if(-1===l)return!1;const u=o.substring(0,l).trim().match(/([\w-]+)\s*$/);if(!u)return!1;const c=u[1].toLowerCase(),g=t[e];return-1!==a.indexOf(g)&&/<[^>]*>/.test(i)&&(/^(class|classname|id|style|src|href|type|name|role|aria-\w+|data-\w+|key|ref|onclick|onchange|value|checked|disabled|readonly|placeholder|title|alt)$/i.test(c)||/^on[A-Z]/.test(c)||/^(v-|:)/.test(c)||c.includes("-")||c.toLowerCase().startsWith("data"))}isInsideFunctionCall(t,e){const s=t.substring(Math.max(0,e-200),e);if(/console\.(log|error|warn|info|debug|trace)\s*\(\s*['"`]*$/.test(s))return!0;const n=Math.max(0,e-300),i=t.substring(n,e),r=[];for(let t=i.length-1;t>=0;t--)if("("===i[t]){const e=i.substring(0,t).trim();/(\w+(\.\w+)*|\]\s*)$/.test(e)&&!/\b(if|for|while|switch|catch|with)\s*$/.test(e)&&r.push(n+t)}for(const s of r){let n=1,i=null;for(let e=s+1;e<t.length&&n>0;e++)if("("===t[e])n++;else if(")"===t[e]&&(n--,0===n)){i=e;break}if(i&&e>s&&e<i){const e=t.substring(s+1,i),n=e.includes("{")&&e.includes("}"),r=e.includes("[")&&e.includes("]");return!(n||r)}}return!1}extractMeaningfulStrings(t){return this.extractMeaningfulStringsWithPosition(t,"html").map(t=>t.text)}parseVueFile(t){const e={htmlText:[],naturalLanguageAttributes:[],strings:[]},s=t.match(/<template[^>]*>([\s\S]*?)<\/template>/i);if(s){const n=s[1],i=t.indexOf(s[0])+s[0].indexOf(n),r=this.parseHtmlContent(n,!1,0,void 0,"vue");r.htmlText.forEach(t=>{t.absoluteStart+=i,t.absoluteEnd+=i,e.htmlText.push(t)}),r.naturalLanguageAttributes.forEach(t=>{t.absoluteStart+=i,t.absoluteEnd+=i,e.naturalLanguageAttributes.push(t)})}const n=t.match(/<script[^>]*>([\s\S]*?)<\/script>/i);if(n){const s=n[1],i=t.indexOf(n[0])+n[0].indexOf(s);this.parseJavaScriptTypeFiles(s).strings.forEach(s=>{const n=this.getPositionInfo(t,s.absoluteStart+i,s.absoluteEnd+i);s.lineNumber=n.lineNumber,s.startPosition=n.startPosition,s.endPosition=n.endPosition,s.absoluteStart+=i,s.absoluteEnd+=i,e.strings.push(s)})}return e}parseHtmlFile(t){const e={htmlText:[],naturalLanguageAttributes:[],strings:[]},s=this.parseHtmlContent(t,!1,0,void 0,"html");e.htmlText.push(...s.htmlText),e.naturalLanguageAttributes.push(...s.naturalLanguageAttributes);const n=t.matchAll(/<script[^>]*>([\s\S]*?)<\/script>/gi);for(const s of n){const n=s[1],i=t.indexOf(s[0])+s[0].indexOf(n);this.extractMeaningfulStringsWithPosition(n,"javascript").forEach(s=>{const n=this.getPositionInfo(t,s.absoluteStart+i,s.absoluteEnd+i);s.lineNumber=n.lineNumber,s.startPosition=n.startPosition,s.endPosition=n.endPosition,s.columnStart=n.columnStart,s.columnEnd=n.columnEnd,s.absoluteStart+=i,s.absoluteEnd+=i,e.strings.push(s)})}return e}parseHtmlContent(t,e=!1,s=0,n,i="html"){const r={htmlText:[],naturalLanguageAttributes:[]};return t.replace(/<script[\s\S]*?<\/script>/gi,"").replace(/<style[\s\S]*?<\/style>/gi,""),[...t.matchAll(/>([^<]*?)</gs)].forEach(o=>{let a=o[1].trim().replace(/\s+/g," ").replace(/\n/g," ");if(a&&a.length>0&&!this.isNonTextualContent({text:a})){const l=o.index,u=t.substring(0,l+1),c=(u.match(/<script\b[^>]*>/gi)||[]).length,g=(u.match(/<\/script>/gi)||[]).length,h=(u.match(/<style\b[^>]*>/gi)||[]).length,m=(u.match(/<\/style>/gi)||[]).length;if(!(c>g||h>m)){const l=e&&(a.includes("{")||a.includes("}")),u=a.includes("{{")&&a.includes("}}"),c=a.includes(":")&&/:\w+\s*=/.test(a),g=/\w+\([^)]*\)/.test(a)||/\w+\.\w+/.test(a)||/\w+:\s*['"]/.test(a)||a.includes("=>")||a.includes("function")||/\$t\(/.test(a);if(!(l||u||c||g)){const e=n||t,l=o.index+s,u=o.index+o[0].length+s,c=this.getPositionInfo(e,l,u),g=o[1],h=g.trim(),m=o.index+1+g.indexOf(h)+s,d=e.substring(0,m).split("\n"),p=d.length,x=d[d.length-1].length,f=h.length,b={lineNumber:p,columnStart:x,columnEnd:x+f,absoluteStart:m,absoluteEnd:m+f};r.htmlText.push({text:a.replace(/\n/,"").trim(),type:"htmlText",context:i,lineNumber:b.lineNumber,startPosition:b.columnStart,endPosition:b.columnEnd,columnStart:b.columnStart,columnEnd:b.columnEnd,absoluteStart:b.absoluteStart,absoluteEnd:b.absoluteEnd,originalStartPosition:c.columnStart,originalEndPosition:c.columnEnd,originalAbsoluteStart:c.absoluteStart,originalAbsoluteEnd:c.absoluteEnd,originalMatch:o[0]})}}}}),["placeholder","title","alt","aria-label","label","value","aria-description","aria-labelledby","data-tooltip","data-title","data-description","data-placeholder","data-label"].forEach(o=>{const a=new RegExp(`(:|^|\\s)(${o})\\s*=\\s*["']([^"']+)["']`,"gi");[...t.matchAll(a)].forEach(o=>{const a=o[1],l=o[2],u=o[3].trim(),c=o[0];o.index;const g=":"===a,h=e&&(u.includes("{")||u.includes("}"));if(!g&&!h&&u&&u.length>0&&!this.isNonTextualContent({text:u,isAttribute:!0})){const e=n||t,a=o.index+s,g=o.index+c.length+s,h=this.getPositionInfo(e,a,g),m=c.indexOf('"')+1,d=c.lastIndexOf('"'),p=o.index+m+s,x=o.index+d+s,f=this.getPositionInfo(e,p,x);r.naturalLanguageAttributes.push({text:u.replace(/\n/,"").trim(),type:"attribute",context:i,attribute:l,lineNumber:f.lineNumber,startPosition:f.columnStart,endPosition:f.columnEnd,columnStart:f.columnStart,columnEnd:f.columnEnd,absoluteStart:f.absoluteStart,absoluteEnd:f.absoluteEnd,originalStartPosition:h.columnStart,originalEndPosition:h.columnEnd,originalAbsoluteStart:h.absoluteStart,originalAbsoluteEnd:h.absoluteEnd,originalMatch:c})}})}),r}getPositionInfo(t,e,s){const n=t.substring(0,e).split("\n"),i=n.length,r=n[n.length-1].length,o=r+(s-e);return{lineNumber:i,startPosition:r,endPosition:o,columnStart:r,columnEnd:o,absoluteStart:e,absoluteEnd:s}}parseDirectory(t){const e=[];try{const s=P.readdirSync(t);for(const n of s){const s=M.join(t,n),i=P.statSync(s);if(i.isDirectory())["node_modules",".git",".next","dist","build",".vscode"].includes(n)||e.push(...this.parseDirectory(s));else if(i.isFile()){const t=this.parseFile(s);t&&e.push(t)}}}catch(e){console.error(`Error reading directory ${t}:`,e.message)}return e.filter(Boolean)}filterMeaningfulText(t){return t.filter(t=>!(!t||"string"!=typeof t||0===t.trim().length||t.trim().length<2||[/^[0-9]+$/,/^[^a-zA-Z]*$/,/^(true|false|null|undefined)$/i,/^(div|span|p|h[1-6]|img|a|li|ul|ol)$/i,/^[\s\n\r\t]+$/].some(e=>e.test(t.trim())))).map(t=>t.trim())}generateSummary(t){const e={totalFiles:t.length,fileTypes:{},totalTexts:0,textTypes:{htmlText:0,naturalLanguageAttributes:0,strings:0},allTexts:[]};return t.forEach(t=>{const s=t.extension;e.fileTypes[s]=(e.fileTypes[s]||0)+1,Object.keys(t.extractedText).forEach(s=>{const n=t.extractedText[s];Array.isArray(n)&&(e.textTypes[s]=(e.textTypes[s]||0)+n.length,e.totalTexts+=n.length,n.forEach(s=>{"object"==typeof s&&s.text&&e.allTexts.push({...s,file:t.fileName,filePath:t.filePath})}))})}),e.allTexts.sort((t,e)=>(t?.lineNumber??0)!==(e?.lineNumber??0)?(t?.lineNumber??0)-(e?.lineNumber??0):(t?.startPosition??0)-(e?.startPosition??0)),e}exportToJson(t,e){const s=this.generateSummary(t),n={metadata:{timestamp:(new Date).toISOString(),totalFiles:t.length,supportedExtensions:this.supportedExtensions},summary:s,detailedResults:t};try{const t=M.dirname(e);P.existsSync(t)||(P.mkdirSync(t,{recursive:!0}),console.log(`Created directory: ${t}`)),P.writeFileSync(e,JSON.stringify(n,null,2),"utf8"),console.log(`Results exported to: ${e}`)}catch(t){console.error(`Error writing to file: ${t.message}`)}}exportToText(t,e){const s=this.generateSummary(t);let n="Document Parser Results\n";n+="======================\n\n",n+=`Total Files Processed: ${s.totalFiles}\n`,n+=`Total Meaningful Texts Found: ${s.totalTexts}\n\n`,n+="File Types:\n",Object.keys(s.fileTypes).forEach(t=>{n+=`  ${t}: ${s.fileTypes[t]} files\n`}),n+="\nText Types:\n",Object.keys(s.textTypes).forEach(t=>{n+=`  ${t}: ${s.textTypes[t]} items\n`}),n+="\n\nAll Meaningful Texts with Position Info:\n",n+="========================================\n\n",s.allTexts.forEach((t,e)=>{let s=`${e+1}. [${t.type}] ${t.file}`;t.lineNumber&&(s+=` (Line: ${t.lineNumber}, Pos: ${t.startPosition}-${t.endPosition})`),t.attribute&&(s+=` [${t.attribute}]`),s+=`: "${t.text}"`,t.originalMatch&&t.originalMatch!==t.text&&(s+=` | Original: ${t.originalMatch}`),n+=s+"\n"});try{const t=M.dirname(e);P.existsSync(t)||(P.mkdirSync(t,{recursive:!0}),console.log(`Created directory: ${t}`)),P.writeFileSync(e,n,"utf8"),console.log(`Text results exported to: ${e}`)}catch(t){console.error(`Error writing to file: ${t.message}`)}}}export{D as DocumentParser,D as default};